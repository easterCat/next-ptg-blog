{"version":3,"file":"static/webpack/static/development/pages/marked/[id].js.290265f22d98556145b2.hot-update.js","sources":["webpack:///./lib/with-post.js"],"sourcesContent":["import Layout from \"../components/MyLayout\";\nimport dynamic from \"next/dynamic\";\nimport marked from \"marked\";\n\nconst Highlight = dynamic(() => import(\"react-highlight\"));\n\nmarked &&\n  marked.setOptions({\n    gfm: true,\n    tables: true,\n    breaks: true\n  });\n\nfunction WithPost(InnerComponent, options) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.renderMarkdown = this.renderMarkdown.bind(this);\n    }\n\n    renderMarkdown(id) {\n      // If a code snippet contains in the markdown content\n      // then use Highlight component\n      if (id === 1 || id === \"1\") {\n        return (\n          <Layout>\n            <h1>{options.title}</h1>\n            <h3>当前id=>{id}</h3>\n            <div className=\"markdown\">\n              <Highlight innerHTML>{marked(options.content)}</Highlight>\n            </div>\n          </Layout>\n        );\n      }\n\n      // If not, simply render the generated HTML from markdown\n      return (\n        <Layout>\n          <h1>{options.title}</h1>\n          <h3>当前id=>{id}</h3>\n          <div className=\"markdown\">\n            <div dangerouslySetInnerHTML={{ __html: marked(options.content) }} />\n          </div>\n        </Layout>\n      );\n    }\n\n    render() {\n      return <InnerComponent renderMarkdown={this.renderMarkdown}></InnerComponent>;\n    }\n  };\n}\n\nexport default WithPost;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AA/BA;AAAA;AAAA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnCA;AACA;AADA;AAAA;AAAA;AAqCA;AACA;AACA;;;;A","sourceRoot":""}