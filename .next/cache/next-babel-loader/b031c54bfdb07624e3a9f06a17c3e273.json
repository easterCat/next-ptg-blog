{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"/Users/mac/Projects/next-demo/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport fetch from \"isomorphic-unfetch\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = _Typography;\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, __jsx(Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"h2\", {\n  className: \"jsx-4181757484\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Hello userAgent is \", props.userAgent), __jsx(\"ul\", {\n  className: \"jsx-4181757484\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, props.shows.map(show => __jsx(_Card, {\n  style: {\n    width: \"100%\",\n    marginTop: 16\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, __jsx(_Card.Meta, {\n  avatar: __jsx(_Avatar, {\n    src: show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }),\n  title: show.name,\n  description: show.summary,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})))), __jsx(_JSXStyle, {\n  id: \"4181757484\",\n  __self: this\n}, \"h1.jsx-4181757484,a.jsx-4181757484{font-family:\\\"Arial\\\";}ul.jsx-4181757484{padding:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvUHJvamVjdHMvbmV4dC1kZW1vL3BhZ2VzL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRGdCLEFBSTZCLEFBSVYsVUFDWixVQUpBIiwiZmlsZSI6Ii9Vc2Vycy9tYWMvUHJvamVjdHMvbmV4dC1kZW1vL3BhZ2VzL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTXlMYXlvdXRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG5pbXBvcnQgeyBUeXBvZ3JhcGh5LCBEaXZpZGVyLCBQYWdlSGVhZGVyLCBDYXJkLCBJY29uLCBBdmF0YXIgfSBmcm9tIFwiYW50ZFwiO1xuY29uc3QgeyBUaXRsZSwgUGFyYWdyYXBoLCBUZXh0IH0gPSBUeXBvZ3JhcGh5O1xuXG5pbnRlcmZhY2UgSUNvbnRleHQge1xuICByZXE6IElSZXE7XG59XG5cbmludGVyZmFjZSBJUmVxIHtcbiAgaGVhZGVyczogSUhlYWRlcnM7XG59XG5cbmludGVyZmFjZSBJSGVhZGVycyB7XG4gIFwidXNlci1hZ2VudFwiOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBEZWZhdWx0UHJvcHMge1xuICBzaG93czogYW55W107XG4gIHVzZXJBZ2VudDogU3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgSUl0ZW0ge1xuICBzaG93OiBvYmplY3Q7XG59XG5cbmludGVyZmFjZSBJU2hvdyB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgc3VtbWFyeTogc3RyaW5nO1xuICBpbWFnZToge1xuICAgIG1lZGl1bTogc3RyaW5nO1xuICB9O1xufVxuXG5jb25zdCBJbmRleCA9IChwcm9wczogRGVmYXVsdFByb3BzKSA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPFRpdGxlPkJhdG1hbiBUViBTaG93czwvVGl0bGU+XG4gICAgPGgyPkhlbGxvIHVzZXJBZ2VudCBpcyB7cHJvcHMudXNlckFnZW50fTwvaDI+XG4gICAgPHVsPlxuICAgICAge3Byb3BzLnNob3dzLm1hcCgoc2hvdzogSVNob3cpID0+IChcbiAgICAgICAgPENhcmQgc3R5bGU9e3sgd2lkdGg6IFwiMTAwJVwiLCBtYXJnaW5Ub3A6IDE2IH19PlxuICAgICAgICAgIDxDYXJkLk1ldGFcbiAgICAgICAgICAgIGF2YXRhcj17PEF2YXRhciBzcmM9e3Nob3cuaW1hZ2UubWVkaXVtfSAvPn1cbiAgICAgICAgICAgIHRpdGxlPXtzaG93Lm5hbWV9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17c2hvdy5zdW1tYXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvQ2FyZD5cbiAgICAgICkpfVxuICAgIDwvdWw+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgaDEsXG4gICAgICBhIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiQXJpYWxcIjtcbiAgICAgIH1cblxuICAgICAgdWwge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0OiBJQ29udGV4dCkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuXCIpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgY29uc3QgdXNlckFnZW50ID0gY29udGV4dC5yZXFcbiAgICA/IGNvbnRleHQucmVxLmhlYWRlcnNbXCJ1c2VyLWFnZW50XCJdXG4gICAgOiBuYXZpZ2F0b3IudXNlckFnZW50O1xuICByZXR1cm4ge1xuICAgIHNob3dzOiBkYXRhLm1hcCgoaXRlbTogSUl0ZW0pOiBvYmplY3QgPT4gaXRlbS5zaG93KSxcbiAgICB1c2VyQWdlbnRcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xuIl19 */\\n/*@ sourceURL=/Users/mac/Projects/next-demo/pages/index.tsx */\"));\n\nIndex.getInitialProps = async function (context) {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  const userAgent = context.req ? context.req.headers[\"user-agent\"] : navigator.userAgent;\n  return {\n    shows: data.map(item => item.show),\n    userAgent\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/mac/Projects/next-demo/pages/index.tsx"],"names":["Layout","fetch","Title","Paragraph","Text","Index","props","userAgent","shows","map","show","width","marginTop","image","medium","name","summary","getInitialProps","context","res","data","json","req","headers","navigator","item"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,eAAN;;AAgCA,MAAMC,KAAK,GAAIC,KAAD,IACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwBA,KAAK,CAACC,SAA9B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IACf;AAAM,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,YAAM,IAAN;AACE,EAAA,MAAM,EAAE;AAAQ,IAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,CAAWC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV;AAEE,EAAA,KAAK,EAAEJ,IAAI,CAACK,IAFd;AAGE,EAAA,WAAW,EAAEL,IAAI,CAACM,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,CADH,CAHF;AAAA;AAAA;AAAA,mnFADF;;AA4BAX,KAAK,CAACY,eAAN,GAAwB,gBAAeC,OAAf,EAAkC;AACxD,QAAMC,GAAG,GAAG,MAAMlB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMmB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMd,SAAS,GAAGW,OAAO,CAACI,GAAR,GACdJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoB,YAApB,CADc,GAEdC,SAAS,CAACjB,SAFd;AAGA,SAAO;AACLC,IAAAA,KAAK,EAAEY,IAAI,CAACX,GAAL,CAAUgB,IAAD,IAAyBA,IAAI,CAACf,IAAvC,CADF;AAELH,IAAAA;AAFK,GAAP;AAID,CAVD;;AAYA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Typography, Divider, PageHeader, Card, Icon, Avatar } from \"antd\";\nconst { Title, Paragraph, Text } = Typography;\n\ninterface IContext {\n  req: IReq;\n}\n\ninterface IReq {\n  headers: IHeaders;\n}\n\ninterface IHeaders {\n  \"user-agent\": string;\n}\n\ninterface DefaultProps {\n  shows: any[];\n  userAgent: String;\n}\n\ninterface IItem {\n  show: object;\n}\n\ninterface IShow {\n  id: string;\n  name: string;\n  summary: string;\n  image: {\n    medium: string;\n  };\n}\n\nconst Index = (props: DefaultProps) => (\n  <Layout>\n    <Title>Batman TV Shows</Title>\n    <h2>Hello userAgent is {props.userAgent}</h2>\n    <ul>\n      {props.shows.map((show: IShow) => (\n        <Card style={{ width: \"100%\", marginTop: 16 }}>\n          <Card.Meta\n            avatar={<Avatar src={show.image.medium} />}\n            title={show.name}\n            description={show.summary}\n          />\n        </Card>\n      ))}\n    </ul>\n    <style jsx>{`\n      h1,\n      a {\n        font-family: \"Arial\";\n      }\n\n      ul {\n        padding: 0;\n      }\n    `}</style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function(context: IContext) {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  const userAgent = context.req\n    ? context.req.headers[\"user-agent\"]\n    : navigator.userAgent;\n  return {\n    shows: data.map((item: IItem): object => item.show),\n    userAgent\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}