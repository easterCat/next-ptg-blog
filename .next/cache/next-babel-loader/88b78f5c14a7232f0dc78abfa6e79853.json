{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Card from \"antd/lib/card\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Typography from \"antd/lib/typography\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport fetch from \"isomorphic-unfetch\";\nvar Title = _Typography.Title,\n    Paragraph = _Typography.Paragraph,\n    Text = _Typography.Text;\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(Title, null, \"Batman TV Shows\"), __jsx(Paragraph, null, \"Hello userAgent is \", props.userAgent), __jsx(\"ul\", {\n    className: \"jsx-4181757484\"\n  }, props.shows.map(function (show, index) {\n    return __jsx(_Card, {\n      key: show.id,\n      style: {\n        width: \"100%\",\n        marginTop: 16\n      }\n    }, __jsx(_Card.Meta, {\n      avatar: __jsx(_Avatar, {\n        src: show.image.medium\n      }),\n      title: show.name,\n      description: show.summary\n    }));\n  })), __jsx(_JSXStyle, {\n    id: \"4181757484\"\n  }, [\"h1.jsx-4181757484,a.jsx-4181757484{font-family:\\\"Arial\\\";}\", \"ul.jsx-4181757484{padding:0;}\"]));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var res, data, userAgent;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            userAgent = context.req ? context.req.headers[\"user-agent\"] : navigator.userAgent;\n            return _context.abrupt(\"return\", {\n              shows: data.map(function (item) {\n                return item.show;\n              }),\n              userAgent: userAgent\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}