{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Avatar from \"antd/lib/avatar\";\nvar _jsxFileName = \"/Users/mac/Projects/next-demo/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-4181757484\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"h2\", {\n  className: \"jsx-4181757484\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Hello userAgent is \", props.userAgent), __jsx(\"ul\", {\n  className: \"jsx-4181757484\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, props.shows.map(show => __jsx(_Card, {\n  style: {\n    width: \"100%\",\n    marginTop: 16\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, __jsx(_Card.Meta, {\n  avatar: __jsx(_Avatar, {\n    src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }),\n  title: show.name,\n  description: show.summary,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})))), __jsx(_JSXStyle, {\n  id: \"4181757484\",\n  __self: this\n}, \"h1.jsx-4181757484,a.jsx-4181757484{font-family:\\\"Arial\\\";}ul.jsx-4181757484{padding:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvUHJvamVjdHMvbmV4dC1kZW1vL3BhZ2VzL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRGdCLEFBSTZCLEFBSVYsVUFDWixVQUpBIiwiZmlsZSI6Ii9Vc2Vycy9tYWMvUHJvamVjdHMvbmV4dC1kZW1vL3BhZ2VzL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTXlMYXlvdXRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG5pbXBvcnQgeyBTa2VsZXRvbiwgQnV0dG9uLCBTd2l0Y2gsIENhcmQsIEljb24sIEF2YXRhciB9IGZyb20gXCJhbnRkXCI7XG5cbmludGVyZmFjZSBJQ29udGV4dCB7XG4gIHJlcTogSVJlcTtcbn1cblxuaW50ZXJmYWNlIElSZXEge1xuICBoZWFkZXJzOiBJSGVhZGVycztcbn1cblxuaW50ZXJmYWNlIElIZWFkZXJzIHtcbiAgXCJ1c2VyLWFnZW50XCI6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIERlZmF1bHRQcm9wcyB7XG4gIHNob3dzOiBhbnlbXTtcbiAgdXNlckFnZW50OiBTdHJpbmc7XG59XG5cbmludGVyZmFjZSBJSXRlbSB7XG4gIHNob3c6IG9iamVjdDtcbn1cblxuaW50ZXJmYWNlIElTaG93IHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBzdW1tYXJ5OiBzdHJpbmc7XG59XG5cbmNvbnN0IEluZGV4ID0gKHByb3BzOiBEZWZhdWx0UHJvcHMpID0+IChcbiAgPExheW91dD5cbiAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbiAgICA8aDI+SGVsbG8gdXNlckFnZW50IGlzIHtwcm9wcy51c2VyQWdlbnR9PC9oMj5cblxuICAgIDx1bD5cbiAgICAgIHtwcm9wcy5zaG93cy5tYXAoKHNob3c6IElTaG93KSA9PiAoXG4gICAgICAgIDxDYXJkIHN0eWxlPXt7IHdpZHRoOiBcIjEwMCVcIiwgbWFyZ2luVG9wOiAxNiB9fT5cbiAgICAgICAgICA8Q2FyZC5NZXRhXG4gICAgICAgICAgICBhdmF0YXI9e1xuICAgICAgICAgICAgICA8QXZhdGFyIHNyYz1cImh0dHBzOi8vem9zLmFsaXBheW9iamVjdHMuY29tL3Jtc3BvcnRhbC9PRFRMY2p4QWZ2cWJ4SG5WWENZWC5wbmdcIiAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGl0bGU9e3Nob3cubmFtZX1cbiAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtzaG93LnN1bW1hcnl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9DYXJkPlxuICAgICAgKSl9XG4gICAgPC91bD5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICBoMSxcbiAgICAgIGEge1xuICAgICAgICBmb250LWZhbWlseTogXCJBcmlhbFwiO1xuICAgICAgfVxuXG4gICAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQ6IElDb250ZXh0KSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW5cIik7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCB1c2VyQWdlbnQgPSBjb250ZXh0LnJlcVxuICAgID8gY29udGV4dC5yZXEuaGVhZGVyc1tcInVzZXItYWdlbnRcIl1cbiAgICA6IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIHJldHVybiB7XG4gICAgc2hvd3M6IGRhdGEubWFwKChpdGVtOiBJSXRlbSk6IG9iamVjdCA9PiBpdGVtLnNob3cpLFxuICAgIHVzZXJBZ2VudFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XG4iXX0= */\\n/*@ sourceURL=/Users/mac/Projects/next-demo/pages/index.tsx */\"));\n\nIndex.getInitialProps = async function (context) {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  const userAgent = context.req ? context.req.headers[\"user-agent\"] : navigator.userAgent;\n  return {\n    shows: data.map(item => item.show),\n    userAgent\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/mac/Projects/next-demo/pages/index.tsx"],"names":["Layout","fetch","Index","props","userAgent","shows","map","show","width","marginTop","name","summary","getInitialProps","context","res","data","json","req","headers","navigator","item"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AA8BA,MAAMC,KAAK,GAAIC,KAAD,IACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwBA,KAAK,CAACC,SAA9B,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IACf;AAAM,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,YAAM,IAAN;AACE,EAAA,MAAM,EACJ;AAAQ,IAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAIE,EAAA,KAAK,EAAEF,IAAI,CAACG,IAJd;AAKE,EAAA,WAAW,EAAEH,IAAI,CAACI,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,CADH,CAJF;AAAA;AAAA;AAAA,2lFADF;;AA+BAT,KAAK,CAACU,eAAN,GAAwB,gBAAeC,OAAf,EAAkC;AACxD,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMZ,SAAS,GAAGS,OAAO,CAACI,GAAR,GACdJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoB,YAApB,CADc,GAEdC,SAAS,CAACf,SAFd;AAGA,SAAO;AACLC,IAAAA,KAAK,EAAEU,IAAI,CAACT,GAAL,CAAUc,IAAD,IAAyBA,IAAI,CAACb,IAAvC,CADF;AAELH,IAAAA;AAFK,GAAP;AAID,CAVD;;AAYA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Skeleton, Button, Switch, Card, Icon, Avatar } from \"antd\";\n\ninterface IContext {\n  req: IReq;\n}\n\ninterface IReq {\n  headers: IHeaders;\n}\n\ninterface IHeaders {\n  \"user-agent\": string;\n}\n\ninterface DefaultProps {\n  shows: any[];\n  userAgent: String;\n}\n\ninterface IItem {\n  show: object;\n}\n\ninterface IShow {\n  id: string;\n  name: string;\n  summary: string;\n}\n\nconst Index = (props: DefaultProps) => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <h2>Hello userAgent is {props.userAgent}</h2>\n\n    <ul>\n      {props.shows.map((show: IShow) => (\n        <Card style={{ width: \"100%\", marginTop: 16 }}>\n          <Card.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={show.name}\n            description={show.summary}\n          />\n        </Card>\n      ))}\n    </ul>\n    <style jsx>{`\n      h1,\n      a {\n        font-family: \"Arial\";\n      }\n\n      ul {\n        padding: 0;\n      }\n    `}</style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function(context: IContext) {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  const userAgent = context.req\n    ? context.req.headers[\"user-agent\"]\n    : navigator.userAgent;\n  return {\n    shows: data.map((item: IItem): object => item.show),\n    userAgent\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}