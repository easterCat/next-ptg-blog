{"version":3,"file":"static/webpack/static/development/pages/books.js.3174248c71dc122e4746.hot-update.js","sources":["webpack:///./pages/books.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/MyLayout\";\nimport { Button, Avatar } from \"antd\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport uuid from \"react-uuid\";\n\ninterface IProps {\n  router: object;\n  shows: [];\n  homeStore: object;\n}\n\ninterface IState {\n  loading: boolean;\n  loadingMore: boolean;\n  hasMore: boolean;\n  active: string;\n}\ninterface IRes {\n  data: [];\n}\ninterface IItem {\n  show: object;\n}\ninterface IK {\n  id: number;\n  url: string;\n  name: string;\n  summary: string;\n  premiered: string;\n  image: {\n    medium: string;\n    original: string;\n  };\n}\n\nclass Books extends Component<IProps, IState> {\n  static async getInitialProps() {\n    const res: IRes = await axios.get(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = res.data;\n    return {\n      shows: data.map((item: IItem): object => item.show)\n    };\n  }\n\n  public state = {\n    loading: true,\n    active: \"hot\", // hot or new\n    loadingMore: false,\n    hasMore: true\n  };\n\n  componentDidMount() {\n    if (this.props && this.props.shows) {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  public changeActive(active: string) {\n    this.setState({\n      active\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <div className=\"books-banner\">\n            <img src=\"/static/images/banner.jpg\" alt=\"banner\" />\n          </div>\n          <div className=\"books\">\n            <div className=\"books-left\">\n              <div className=\"left-home-order\">\n                <span\n                  onClick={() => this.changeActive(\"hot\")}\n                  className={classnames({ active: this.state.active === \"hot\" })}\n                >\n                  推荐书籍\n                </span>\n                <i className=\"line\"></i>\n                <span\n                  onClick={() => this.changeActive(\"new\")}\n                  className={classnames({ active: this.state.active === \"new\" })}\n                >\n                  我购买的书籍\n                </span>\n              </div>\n              <ul className=\"books-list\">\n                {Array(10)\n                  .fill(0)\n                  .map(item => {\n                    return (\n                      <li className=\"books-item\" key={uuid()}>\n                        <div className=\"books-item-left\">\n                          <img\n                          src=\"\"\n                            alt=\"\"\n                          />\n                        </div>\n                        <div className=\"books-item-right\">\n                          <div className=\"books-item-name\">我未完成的问题</div>\n                          <div className=\"books-item-desc\">\n                            通过实践快速上手 SwiftUI 及 Combine 响应式编程框架，掌握下一代客户端 UI 开发技术。 WWDC 2019\n                            上 Apple 公布了声明式全新界面框架 SwiftUI，以及配套的响应式编程框架 Combine。对于 Apple\n                            平台的开发者来说，这是一次全新的转变和挑战。本书通过几个具体的实战例子，由浅入深介绍了\n                            SwiftUI 和 Combine 框架的使用方式及核心思想，帮助您顺利步入令人激动的 Apple 开发新时代。\n                          </div>\n                          <div className=\"books-item-avatar\">\n                            <Avatar size={20} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                            <span> 郭富城</span>\n                          </div>\n                          <div className=\"books-item-read\">\n                            <Button type=\"danger\" shape=\"round\">\n                              阅读\n                            </Button>\n                          </div>\n                          <div className=\"books-item-price\">\n                            <span>¥ 19.9</span>\n                            <span>14 章节 · 222 人购买</span>\n                          </div>\n                        </div>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Books;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AA+BA;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AAAA;AACA;AACA;AAJA;AACA;;;;;;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAOA;;;;;;;;;;;;;AA/FA;AACA;;AADA;AACA;AACA;AACA;AAAA;AAAA;AADA;AACA;;;;;;;;;;;;;;;;;;AALA;AACA;AAmGA;;;;A","sourceRoot":""}